
// Build an automated data pipeline for the following source:
// Direct download link: https://gtfs.rhoenenergie-bus.de/GTFS.zip

pipeline GTFSPipeline {
	GTFS_Extractor
		-> ZipArchiveInterpreter
		-> DataFilePicker
        -> GTFS_TextFileInterpreter
        -> GTFS_CSVInterpreter
        -> GTFS_TableInterpreter
        -> DataLoader;

	block GTFS_Extractor oftype HttpExtractor {
		url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
	}

    block ZipArchiveInterpreter oftype ArchiveInterpreter {
		archiveType: "zip";
		}
    
    // Pick out only stops (from stops.txt)
    // Only the columns stop_id, stop_name, stop_lat, stop_lon, zone_id with fitting data types

    block DataFilePicker oftype FilePicker { 
		path: "/stops.txt";
		}
       
	block GTFS_TextFileInterpreter oftype TextFileInterpreter {
		}


	block GTFS_CSVInterpreter oftype CSVInterpreter {
		enclosing: '"'; 
		enclosingEscape: '"';
	}

	// filter data
    // Only keep stops from zone 2001
	valuetype year oftype integer{ 
		constraints:[year2001];
		}
	constraint year2001 oftype RangeConstraint { 
		lowerBound: 2001; upperBound: 2001; 
		}

	// validate data
    // stop_name can be any text but must maintain german umlauts
    // stop_lat/stop_lon must be a geographic coordinates between -90 and 90, including upper/lower bounds
    // Drop rows containing invalid data

	valuetype coordinates oftype decimal { 
		constraints: [Angleconstraint]; 
		}
	constraint Angleconstraint oftype RangeConstraint{ 
		lowerBound: -90; upperBound: 90; 
		}


	// assign data types
    // Use fitting SQLite types (e.g., BIGINT, TEXT or FLOAT) for all columns
	block GTFS_TableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"stop_id" oftype integer,
			"stop_name" oftype text,
			"stop_lat" oftype coordinates,
			"stop_lon" oftype coordinates,
			"zone_id" oftype year,
			
		];
	}

	// Load data
    // Write data into a SQLite database called “gtfs.sqlite”, in the table “stops”
	block DataLoader oftype SQLiteLoader {
		table: "stops";
		file: "gtfs.sqlite";
	}
}